// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "read datasource",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasource"
                ],
                "summary": "read datasource",
                "operationId": "readDatasource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "datasourceName",
                        "name": "datasourceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDatasource"
                        }
                    },
                    "400": {
                        "description": "Incorrect request",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission deny",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "update datasource by datasourceName",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasource"
                ],
                "summary": "update datasource",
                "operationId": "datasource_update",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "files to update",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect request",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission deny",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "create datasource by datasource name",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasource"
                ],
                "summary": "create datasource",
                "operationId": "createDatasource",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "description": "files to download",
                        "name": "filenames",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Incorrect request",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission deny",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete datasource by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasource"
                ],
                "summary": "delete datasource",
                "operationId": "datasource_delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete by datasourceName",
                        "name": "datasourceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "No data or no access to it",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    }
                }
            }
        },
        "/list": {
            "get": {
                "description": "Read datasource list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasource list"
                ],
                "summary": "Read datasource list",
                "operationId": "readDatasourceList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Incorrect request",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Permission deny",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/properErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ResponseDatasource": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "properErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Clean Template API",
	Description:      "Using a translation service as an example",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
